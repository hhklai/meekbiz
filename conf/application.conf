# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret=":mjytpS5/43E1fVQ1>T@yv<cVo]>PLUWdSF3spLuugw5jIDpTgjreIlv8a0<?N2K"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.driver=com.mysql.jdbc.Driver
db.default.url="jdbc:mysql://localhost/meekbizdb"
db.default.user=meekbizUser
db.default.password=x1ft1Tt0935XQ
db.default.logStatements=true
#
# You can expose this datasource via JNDI if needed (Useful for JPA)
db.default.jndiName=DefaultDS
db.default.logStatements=true

# JPA configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
jpa.default=defaultPersistenceUnit


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

#environment specific addresses
application.allow.origin="*"
application.allow.methods="GET, POST, PUT, DELETE, PATCH"
application.allow.headers="accept, content-type, x-xsrf-token"
application.backend.url.prefix=""

#email config
email.notification.address="Meekbiz Notification <noreply@meekbiz.com>"
smtp.mock=true

#amazon s3
aws.access.key=""
aws.secret.key=""
aws.s3.bucket="img-dev.meekbiz.com"
aws.s3.host="http://img-dev.meekbiz.com/"

#elastic search
search.url="http://localhost:9200/meekbiz"
search.shards=5 #number of shards to init on the index
search.replicas=1 #number of replicas to init on the index

#akka
akka.default-dispatcher.core-pool-size-max = 64
akka.debug.receive = on

#play WS settings
ws.followRedirects=true # Follow redirects (default true)
ws.timeout=5000 # Connection timeout in ms (default 120000)
ws.useProxyProperties=true # Whether to use http.proxy* JVM system properties (default true)
ws.useragent="Meekbiz" # A user agent string to set on each request (default none)